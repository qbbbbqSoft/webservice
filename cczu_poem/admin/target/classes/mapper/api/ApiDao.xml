<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bbqbb.poem.admin.modules.api.dao.ApiDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <!--<resultMap type="com.bbqbb.poem.admin.modules.admin.entity.SysSuggestionEntity" id="sysSuggestionMap">-->
        <!--<result property="id" column="ID"/>-->
        <!--<result property="email" column="email"/>-->
        <!--<result property="content" column="content"/>-->
        <!--<result property="nickname" column="nickName"/>-->
        <!--<result property="createdate" column="createDate"/>-->
    <!--</resultMap>-->

    <select id="getTitleList" resultType="com.bbqbb.poem.admin.modules.api.model.SysTitleModel" parameterType="java.util.Map">
        SELECT
            st.*,
            count( sc.ID ) AS commentCount
        FROM
            sys_title st
            LEFT JOIN sys_comment sc ON st.ID = sc.TitleID
        GROUP BY
            st.ID
        HAVING 1 = 1
        AND delStatus = 0
        AND adminStatus = 1
        AND privateStatus = #{privateStatus}
        <if test="search != null and search.trim() != ''">
            AND (content like '%${search}%' OR title LIKE '%${search}%')
        </if>
        <if test="zoneID != null and zoneID != 0">
            AND st.zoneID = #{zoneID}
        </if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by st.createDate DESC
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="getTitleDetailByID" parameterType="java.util.Map" resultType="com.bbqbb.poem.admin.modules.admin.entity.SysTitleEntity">
        SELECT
            *
        FROM
            sys_title
        WHERE
            ID = #{ID}
    </select>

    <select id="getCommentDetailByTitleID" parameterType="java.util.Map" resultType="com.bbqbb.poem.admin.modules.admin.entity.SysCommentEntity">
        SELECT
            *
        FROM
            sys_comment
        WHERE
            TitleID = #{titleID}
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by greatCount DESC
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>
    
    <update id="insertTitleDetail" parameterType="com.bbqbb.poem.admin.modules.admin.entity.SysTitleEntity" >
        INSERT INTO sys_title
            ( title,
            imageUrl,
            imageWidth,
            imageHeight,
            content,
            privateStatus,
            zoneID,
            author,
            avatarUrl,
            `type`,
            delCode,
            CreateDate )
        VALUES
            ( #{title},
             #{imageurl},
             #{imagewidth},
             #{imageheight},
             #{content},
             #{privatestatus},
             #{zoneid},
             #{author},
             #{avatarurl},
             #{type},
             #{delCode},
             #{createdate}
             )
    </update>

    <select id="checkZoneExistByZoneCode" parameterType="java.lang.String" resultType="com.bbqbb.poem.admin.modules.admin.entity.SysZoneEntity">
        SELECT
            *
        FROM
            `sys_zone`
        WHERE
            ZoneCode = #{zoneCode}
    </select>

    <insert id="insertZoneDetail" parameterType="com.bbqbb.poem.admin.modules.admin.entity.SysZoneEntity">
       INSERT INTO `sys_zone` (`ZoneCode`, `ZoneName`, `avatarUrl`, `nickName`, `wxOtherInfo`, `CreateDate` )
    VALUES
	( #{zonecode},#{zonename},#{avatarurl},#{nickname},#{wxotherinfo},#{createdate});
    </insert>

    <select id="getTitleDetailByDelCodeAndID" resultType="com.bbqbb.poem.admin.modules.admin.entity.SysTitleEntity" parameterType="java.util.Map">
        SELECT
            *
        FROM
            sys_title
        WHERE
            delCode = #{delCode}
            AND ID = #{ID}
    </select>

    <delete id="deleteTitleByID" parameterType="java.util.Map">
        DELETE FROM sys_title WHERE ID = #{ID}
    </delete>

    <!--<select id="getHotCommentByTitleID" parameterType="java.util.Map" resultType="com.bbqbb.poem.admin.modules.admin.dao.SysCommentDao">-->
        <!---->
    <!--</select>-->

    <update id="updateGreatCountByCommentID" parameterType="java.util.Map">
        UPDATE sys_comment
        SET greatCount =
        <choose>
            <when test="type != null and type == 0">
                greatCount - 1
            </when>
            <otherwise>
                greatCount + 1
            </otherwise>
        </choose>
          WHERE ID = #{ID}
    </update>

    <update id="updateLikeCountByTitleID" parameterType="java.util.Map">
        UPDATE sys_title
        SET likeCount =
        <choose>
            <when test="type != null and type == 0">
                likeCount - 1
            </when>
            <otherwise>
                likeCount + 1
            </otherwise>
        </choose>
        WHERE ID = #{ID}
    </update>

    <update id="updateNotLikeCountByTitleID" parameterType="java.util.Map">
        UPDATE sys_title
        SET notLikeCount =
        <choose>
            <when test="type != null and type == 0">
                notLikeCount - 1
            </when>
            <otherwise>
                notLikeCount + 1
            </otherwise>
        </choose>
        WHERE ID = #{ID}
    </update>

    <select id="queryActivityAndSignUpInfo" resultType="com.bbqbb.poem.admin.modules.api.model.ActivityAndSignUpInfoModel" parameterType="java.lang.String">
        SELECT sac.activityname,sac.activityplace,sac.activitydate,sac.activityorganizingpeople,sac.activityconfiguration,sac.activitylabel,sac.keep1,sac.keep2,sac.count,ssi.name,ssi.phone,ssi.signAddress,ssi.className,ssi.stuNum,ssi.keep1 as signupkeep1,ssi.keep2 as signupkeep2, ssi.signDate,ssi.leaveDate from sys_activity sac LEFT JOIN sys_signup ssi ON sac.activityID = ssi.activityID WHERE sac.activityID IN (SELECT activityid FROM sys_signup WHERE openid = #{openid})
    </select>


    <select id="checkUserIfExist" resultType="com.bbqbb.poem.admin.modules.admin.entity.SysWxuserinfoEntity" parameterType="java.util.Map">
        SELECT
            *
        FROM
            sys_wxuserinfo
        WHERE
            openID = #{openid}
    </select>

</mapper>